generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id         String      @id @default(uuid())
  name       String
  companions Companion[]
}

model Companion {
  id          String @id @default(uuid())
  userId      String
  userName    String
  src         String
  name        String @db.Text
  description String @db.Text

  instructions String? @db.Text
  seed         String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  messages Message[]
  contexts CompanionContext[]
  // @@fulltext([name])

  @@index([categoryId])
}

enum ContextType {
  PDF
  LINK
  TEXT
}

model CompanionContext {
  id          String      @id @default(uuid())
  type        ContextType
  title       String
  content     String?     @db.Text // For TEXT type
  url         String? // For LINK type
  fileName    String? // For PDF type
  filePath    String? // For PDF type
  isProcessed Boolean     @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companion   Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)
  companionId String

  @@index([companionId])
}

enum Role {
  user
  system
}

model Message {
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  created   DateTime @default(now())
  updatedAt DateTime @updatedAt

  companionId String
  userId      String

  companion Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)

  @@index([companionId])
}

model UserSubscription {
  id                     String    @id @default(uuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}
